
//one way to writing code for displaying list (programmatically)
// ReactDOM.render(React.createElement('ul',null,
// React.createElement('li',null,'item 1'),
// React.createElement('li',null,'item 2'),
// React.createElement('li',null,'item 3')),
// document.getElementById('react-container'))

//JSX way of writing code for displaying list
// ReactDOM.render(
//   <ul>
//   <li>item 1</li>
//   <li>item 2</li>
//   <li>item 3</li>
//   </ul>,
//   document.getElementById('react-container')
// )

//tutorial for component in earlier version

// var MyComponent = React.createClass({
//   render(){
//     return <div>
//     <h1>Hello world form component</h1>
//     <p>this is my first component !!</p>
//     </div>
//   }
// })

//new way of creating class in ES6

// class MyComponent extends React.Component {
//   render() {
    // return <div>
    // <h1>Hello world form component</h1>
    // <p>this is my first component !!</p>
    // </div>
//   }
// }



//stateless way of creating a component

// const MyComponent = () => {
//   return <div>
//   <h1>Hello world form component</h1>
//   <p>this is my first component !!</p>
//   </div>
// }


//component using props
// var MyComponent = React.createClass({
//   render(){
//     return <div>
//     <h1>{this.props.text}</h1>
//     <p>{this.props.children} !!</p>
//     </div>
//   }
// })
//
// ReactDOM.render(<div>
// <MyComponent text="Hello World !!">
// This is some message
// </MyComponent>
// <MyComponent text="Hello again">
// This is again a message
// </MyComponent>
// <MyComponent text="No more Hello">
// No more messages
// </MyComponent>
//   </div>
//,document.getElementById('react-container'))
